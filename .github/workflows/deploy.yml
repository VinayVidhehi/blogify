name: Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  build_and_push_client:
    environment: Blogapp 
    uses: ./.github/workflows/build-and-push-docker.yml
    with:
      directory: 'client'
      ecr_repository: '${{ secrets.ECR_REPOSITORY }}-client'
      paths: 'client/**'

  build_and_push_api:
    environment: Blogapp 
    uses: ./.github/workflows/build-and-push-docker.yml
    with:
      directory: 'api'
      ecr_repository: '${{ secrets.ECR_REPOSITORY }}-api'
      paths: 'api/**'

  build_and_push_root:
    environment: Blogapp 
    uses: ./.github/workflows/build-and-push-docker.yml
    with:
      directory: 'root'
      ecr_repository: 'combined'
      paths: '**/*'
      always_build: true

  deploy:
    environment: Blogapp 
    runs-on: ubuntu-latest
    needs: [build_and_push_client, build_and_push_api, build_and_push_root]

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: SSH and deploy
      uses: appleboy/ssh-action@v0.1.4
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_SSH_KEY }}
        envs:
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
          ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
        script: |
          docker-compose down
          docker pull ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPOSITORY }}-client:latest
          docker pull ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPOSITORY }}-api:latest
          docker-compose up -d
